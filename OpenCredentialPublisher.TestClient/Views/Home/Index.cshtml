@{
    ViewData["Title"] = "Home Page";
}
<style>
    .border {
        padding: 20px;
    }
    input.token {
        width: 450px;
    }
    input { margin: 2px; width: 95% }
    textarea {
        margin: 5px;
        width: 100%;
    }
    button { margin: 0 10px; }

    button.btn-link-sm { font-size: 0.8rem; }

    .btn-sm { padding: .25rem .5rem; 
                  font-size: .875rem;
                  line-height: 1.5;
                  border-radius: .2rem;
                  margin-top: 8px; 
                  height: 32px; }
    .toggle {
        cursor: pointer;
    }

    .response {
        font-size:11px; margin: 10px; padding-left:20px; overflow: auto; max-height: 300px; width:100%;
    }

    h5 {
        text-align: left; margin:20px 0px; text-decoration: underline;
    }
</style>

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <div>To view logs, please open browser console</div>

    <div id="tab-setup" class="border text-left">
        <div class="row">
            <label for="apiendpoint" class="col-sm-2">API Endpoint</label>
            <input id="apiendpoint" type="text" class="form-control col-sm-7" value="https://localhost:5001" />

            
        </div>
        <div class="row" style="margin:10px 0;">
            <button type="button" id="apiendpoint-validate" class="btn btn-primary">Validate API Endpoint</button>
        </div>
        <div class="row">
            <div class="response" id="validate_response"></div>
        </div>
    </div>

    <ul class="nav nav-tabs" role="tablist" style="margin-top:20px;">
        <li class="nav-item"><a class="nav-link active" data-toggle="tab" role="tab" href="#tab-main-publisher">Publish</a></li>
        <li class="nav-item"><a class="nav-link" data-toggle="tab" role="tab" href="#tab-main-wallet">Wallet</a></li>
        <li class="nav-item"><a class="nav-link" data-toggle="tab" role="tab" href="#tab-main-revoke">Revoke</a></li>
    </ul>

    <div class="tab-content">
        <div id="tab-main-publisher" class="tab-pane fade show active" role="tabpanel">
            <h5>Register Publisher Client</h5>
            <div id="tab-register-publisher" class="border text-left">
                <div>
                    <label class="font-weight-bold">POST /connect/register</label>
                </div>
                <div class="row">
                    <label class="col-sm-2">client_name</label>
                    <input id="reg_pub_client_name" type="text" class="form-control col-sm-3" value="Test Publisher Client" />
                </div>
                <div class="row">
                    <label class="col-sm-2">client_uri</label>
                    <input id="reg_pub_client_uri" type="text" class="form-control col-sm-3" value="https://nd.gov" />
                </div>
                <div class="row">
                    <label class="col-sm-2">scope</label>
                    <input id="reg_pub_scope" type="text" class="form-control col-sm-3" value="ocp-publisher" />
                </div>
                <div class="row">
                    <div class="col-sm-3">
                        Additional Properties
                    </div>
                    <input id="reg_pub_add1property" type="text" class="form-control col-sm-3" value="token_endpoint_auth_method" />
                    <input id="reg_pub_add1value" type="text" class="form-control col-sm-3" value="client_secret_basic" />
                </div>
                <div class="row">
                    <div class="col-sm-3">
                    </div>
                    <input id="reg_pub_add2property" type="text" class="form-control col-sm-3" value="" />
                    <input id="reg_pub_add2value" type="text" class="form-control col-sm-3" value="" />
                </div>
                <div class="row">
                    <div class="col-sm-3">
                    </div>
                    <input id="reg_pub_add3property" type="text" class="form-control col-sm-3" value="" />
                    <input id="reg_pub_add3value" type="text" class="form-control col-sm-3" value="" />
                </div>
                <div class="row" style="margin:10px 0;">
                    <button type="button" id="register_publisher" class="btn btn-primary">Register Publisher Client</button>
                </div>
                <div class="row">
                    <div class="response" id="reg_pub_response"></div>
                </div>
            </div>

            <h5>Authenticate Publisher Client</h5>
            <div id="tab-login-publisher" class="border text-left">
                <div>
                    <label class="font-weight-bold">POST /connect/token</label>
                </div>
                <div class="row">
                    <label class="col-sm-2">client_id</label>
                    <input id="auth_pub_client_id" type="text" class="form-control col-sm-7" value="" />
                    <button type="button" id="auth_pub_userlastreg" class="btn btn-link btn-link-sm">Use Last Registered Publisher</button>
                </div>
                <div class="row">
                    <label class="col-sm-2">client_secret</label>
                    <input id="auth_pub_client_secret" class="form-control col-sm-7" type="password" value="" />
                </div>
                <div class="row">
                    <label class="col-sm-2">scope</label>
                    <input id="auth_pub_scope" type="text" class="form-control col-sm-3" value="ocp-publisher" />
                </div>
                <div class="row">
                    <label class="col-sm-2">grant_type</label>
                    <input id="auth_pub_grant_type" type="text" class="form-control col-sm-3" value="client_credentials" />
                </div>
                <div class="row" style="margin:10px 0;">
                    <button id="authenticate_publisher" type="button" class="btn btn-primary">Authenticate Publisher Client</button>
                </div>
                <div class="row">
                    <div class="response" id="auth_pub_response"></div>
                </div>
            </div>

            <h5>Configure Publisher Client</h5>
            <div id="tab-login-publisher" class="border text-left">
                <div>
                    <label class="font-weight-bold">POST /api/configuration</label>
                </div>
                <div class="row">
                    <label class="col-sm-2">Authorization</label>
                    <input id="configure_publish_token" type="text" class="form-control col-sm-7 token" value="" />
                    <button id="configure_publish_uselasttoken" type="button" class="btn btn-link btn-link-sm">Use Last Publisher Access Token</button>
                </div>
                <div class="row">
                    <label class="col-sm-2">Wallet Connect Uri</label>
                    <input id="configure_publish_wallet_uri" type="text" class="form-control col-sm-7" value="" />
                </div>
                <div class="row">
                    <label class="col-sm-2">Push Credential Uri</label>
                    <input id="configure_publish_push_uri" type="text" class="form-control col-sm-7" value="" />
                </div>
                <div class="row" style="margin:10px 0;">
                    <button id="configure_publisher" type="button" class="btn btn-primary">Configure Publisher Client</button>
                </div>
                <div class="row">
                    <div class="response" id="configure_pub_response"></div>
                </div>
            </div>

            <h5>Publish CLR</h5>
            <div id="tab-publish" class="border text-left">
                <div>
                    <label class="font-weight-bold">POST /api/publish</label>
                </div>
                <div class="row">
                    <label class="col-sm-2">Authorization</label>
                    <input id="publish_token" type="text" class="form-control col-sm-7 token" value="" />
                    <button id="publish_uselasttoken" type="button" class="btn btn-link btn-link-sm">Use Last Publisher Access Token</button>
                </div>
                <div class="row">
                    <div class="col-sm-2">
                        <label>CLR Request (JSON)</label><br />
                        <br />
                        <button type="button" id="publish_browsefile" class="btn btn-sm btn-outline-primary" style="margin: 0; padding: 1px 4px; ">Browse...</button>
                        <button type="button" id="publish_clear" class="btn btn-sm btn-outline-primary" style="margin: 0; padding: 1px 4px;">Clear</button>
                        <input style="width:0px; height:0px; overflow: hidden;" type="file" accept="application/json" name="inputfile" id="inputfile">
                    </div>
                    <textarea id="publish_clr" class="form-control col-sm-9" style="font-family: 'Courier New'; font-size: 13px; min-height: 400px;"></textarea>
                </div>
                <div class="row">
                    <div class="col-sm-2"></div>
                    <div style="display: none;">
                        <button type="button" class="btn btn-link-sm">Add PDF Assertion</button>
                    </div>
                </div>
                <div class="row" style="margin:10px 0;">
                    <button id="publish" type="button" class="btn btn-primary">Publish CLR</button>
                    <button id="publishPush" type="button" class="btn btn-primary">Publish then Push CLR</button>
                </div>
                <div class="row">
                    <div class="response" id="publish_response"></div>
                </div>
            </div>

            <h5>Inquire Publish Status</h5>
            <div id="tab-inquire" class="border text-left">
                <div>
                    <label class="font-weight-bold">GET /api/requests/{requestId}</label>
                </div>
                <div class="row">
                    <label class="col-sm-2">Authorization</label>
                    <input id="inquire_token" type="text" class="form-control col-sm-7 token" value="" />
                    <button id="inquire_uselasttoken" type="button" class="btn btn-link btn-link-sm">Use Last Publisher Access Token</button>
                </div>
                <div class="row">
                    <label class="col-sm-2">RequestId</label>
                    <input id="inquire_requestid" type="text" class="form-control col-sm-7" value="" />
                    <button id="inquire_uselastrequestId" type="button" class="btn btn-link btn-link-sm">Use Last Generated RequestId</button>
                </div>
                <div class="row" style="margin:10px 0;">
                    <button id="inquire" type="button" class="btn btn-primary">Request Publish Status</button>
                </div>
                <div class="row">
                    <div class="response" id="inquire_response"></div>
                </div>
                <a id="inquire_url" href="" target="_blank" style="display:none;">Connect to Web Wallet</a> <br />
                <img id="inquire_qrcode" src="" alt="QR Code" style="display:none;" />
            </div>
        </div>

        <div id="tab-main-wallet" class="tab-pane fade" role="tabpanel">
            <h5>Register Wallet Client</h5>
            <div id="section-register-wallet" class="border text-left">
                <div>
                    <label class="font-weight-bold">POST /connect/register</label>
                </div>
                <div class="row">
                    <label class="col-sm-2">client_name</label>
                    <input id="reg_wallet_client_name" type="text" class="form-control col-sm-3" value="Test Wallet Client" />
                </div>
                <div class="row">
                    <label class="col-sm-2">client_uri</label>
                    <input id="reg_wallet_client_uri" type="text" class="form-control col-sm-3" value="https://nd.gov" />
                </div>
                <div class="row">
                    <label class="col-sm-2">scope</label>
                    <input id="reg_wallet_scope" type="text" class="form-control col-sm-3" value="ocp-wallet" />
                </div>
                <div class="row">
                    <div class="col-sm-3">
                        Additional Properties
                    </div>
                    <input id="reg_wallet_add1property" type="text" class="form-control col-sm-3" value="token_endpoint_auth_method" />
                    <input id="reg_wallet_add1value" type="text" class="form-control col-sm-3" value="client_secret_basic" />
                </div>
                <div class="row">
                    <div class="col-sm-3">
                    </div>
                    <input id="reg_wallet_add2property" type="text" class="form-control col-sm-3" value="" />
                    <input id="reg_wallet_add2value" type="text" class="form-control col-sm-3" value="" />
                </div>
                <div class="row">
                    <div class="col-sm-3">
                    </div>
                    <input id="reg_wallet_add3property" type="text" class="form-control col-sm-3" value="" />
                    <input id="reg_wallet_add3value" type="text" class="form-control col-sm-3" value="" />
                </div>
                <div class="row" style="margin:10px 0;">
                    <button type="button" id="register_wallet" class="btn btn-primary">Register Wallet Client</button>
                </div>
                <div class="row">
                    <div class="response" id="reg_wallet_response"></div>
                </div>
            </div>

            <h5>Authenticate Wallet Client</h5>
            <div id="section-login-wallet" class="border text-left">
                <div>
                    <label class="font-weight-bold">POST /connect/token</label>
                </div>
                <div class="row">
                    <label class="col-sm-2">client_id</label>
                    <input id="auth_wallet_client_id" type="text" class="form-control col-sm-7" value="" />
                    <button type="button" id="auth_wallet_userlastreg" class="btn btn-link btn-link-sm">Use Last Registered Wallet</button>
                </div>
                <div class="row">
                    <label class="col-sm-2">client_secret</label>
                    <input id="auth_wallet_client_secret" class="form-control col-sm-7" type="password" value="" />
                </div>
                <div class="row">
                    <label class="col-sm-2">scope</label>
                    <input id="auth_wallet_scope" type="text" class="form-control col-sm-3" value="ocp-wallet" />
                </div>
                <div class="row">
                    <label class="col-sm-2">grant_type</label>
                    <input id="auth_wallet_grant_type" type="text" class="form-control col-sm-3" value="client_credentials" />
                </div>
                <div class="row" style="margin:10px 0;">
                    <button id="authenticate_wallet" type="button" class="btn btn-primary">Authenticate Wallet Client</button>
                </div>
                <div class="row">
                    <div class="response" id="auth_wallet_response"></div>
                </div>
            </div>

            <h5>Retrieve Verifiable Credentials</h5>
            <div id="section-vc-wallet" class="border text-left">
                <div>
                    <label class="font-weight-bold">POST /api/credentials</label>
                </div>
                <div class="row">
                    <label class="col-sm-2">Authorization</label>
                    <input id="vc_wallet_token" type="text" class="form-control col-sm-7 token" value="" />
                    <button id="vc_wallet_uselasttoken" type="button" class="btn btn-link btn-link-sm">Use Last Wallet Access Token</button>
                </div>
                <div class="row">
                    <label class="col-sm-2">Access Key</label>
                    <input id="vc_wallet_accesskey" type="text" class="form-control col-sm-7" value="" />
                    <button type="button" id="vc_wallet_uselastaccesskey" class="btn btn-link btn-link-sm">Use Last Generated Access Key</button>
                </div>
                <div class="row" style="margin:10px 0;">
                    <button id="vc_wallet" type="button" class="btn btn-primary">Get Verifiable Credentials</button>
                </div>
                <div class="row">
                    <div class="response" id="vc_wallet_response"></div>
                </div>
            </div>
        </div>

        <div id="tab-main-revoke" class="tab-pane fade" role="tabpanel">
            <h5>Revoke Request/Key</h5>
            <div id="section-revoke" class="border text-left">
                <div class="info">
                    <label><span class="font-weight-bold">DELETE /api/requests/{requestId}</span> (<i>Must be from same client_id who published</i>)</label>
                </div>
                <div class="row">
                    <label class="col-sm-2">Authorization</label>
                    <input id="revoke_token" type="text" class="form-control col-sm-7 token" value="" />
                    <button id="revoke_uselasttoken" type="button" class="btn btn-link btn-link-sm">Use Last Publisher Access Token</button>
                </div>
                <div class="row">
                    <label class="col-sm-2">RequestId</label>
                    <input id="revoke_requestid" type="text" class="form-control col-sm-7" value="" />
                    <button id="revoke_uselastrequestId" type="button" class="btn btn-link btn-link-sm">Use Last Generated RequestId</button>
                </div>
                <div class="row" style="margin:10px 0;">
                    <button id="revoke" type="button" class="btn btn-primary">Revoke</button>
                </div>
                <div class="row">
                    <div class="response" id="revoke_response"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
<script src="~/lib/signalr/signalr.js"></script>
<script>

    $(document).ready(function () {
        var endpoint = localStorage.getItem('apiendpoint');
        if (endpoint) {
            console.log(endpoint);
            $('#apiendpoint').val(endpoint);
        }
        var configure_publish_wallet_uri = localStorage.getItem('configure_publish_wallet_uri');
        if (configure_publish_wallet_uri && configure_publish_wallet_uri != "undefined") {
            $("#configure_publish_wallet_uri").val(configure_publish_wallet_uri);
        }
        else {
            $("#configure_publish_wallet_uri").val("https://ocp-wallet-uat.azurewebsites.net/credentials/connect");
        }
        var configure_publish_push_uri = localStorage.getItem('configure_publish_push_uri');
        if (configure_publish_push_uri && configure_publish_push_uri != "undefined") {
            $("#configure_publish_push_uri").val(configure_publish_wallet_uri);
        }
        else {
            $("#configure_publish_push_uri").val("https://ocp-wallet-uat.azurewebsites.net/credentials/connect/external");
        }

    });

    var signalRConnection = null;


    //$('#test-signalr').on('click', function () {
    //    console.log('test signalr');
    //    var requestId = "test123";
    //    connectSignalR(endpoint(), requestId);
    //});


    function connectSignalR(url, requestId) {
        signalRConnection = new signalR.HubConnectionBuilder()
            .withUrl(`${url}/hubs/requests`)
            .withAutomaticReconnect()
            .configureLogging(signalR.LogLevel.Information)
            .build();

        signalRConnection.on('PublishUpdate', (requestId, status) => {
            console.log(`SignalR received PublishUpdate message (requestId: ${requestId}, status: ${status})`);
            alert(`SignalR: Request ${requestId} has changed status to ${status}`);

            // if Complete, no need to wait for additional messages, so leave group
            if (status == "Complete") {
                var lastToken = `Bearer ${localStorage.getItem('auth_pub_access_token')}`;
                inquire(lastToken, requestId);
                signalRConnection.invoke("LeaveGroup", requestId)
                    .catch(err => {
                        console.log(err);
                    });
            }
        });

        signalRConnection.onclose(startSignalR);

        // Start the connection.
        startSignalR(requestId);
    }


    async function startSignalR(requestId) {
        try {
            await signalRConnection.start();

            console.log("SignalR Connected.");
            signalRConnection.invoke("JoinGroup", requestId)
                .catch(err => {
                    console.log(err);
                });
        } catch (err) {
            console.log(err);
            setTimeout(startSignalR, 5000);
        }
    };

    function endpoint() {
        return $('#apiendpoint').val().replace(/\/$/, "");
    }

    function bindToggle() {
        $('.toggle').unbind('click').bind('click', function () {
            $(this).parent().parent().find('pre').toggle();
        });
    }

    $('#apiendpoint-validate').on('click', function () {
        let thisButton = $(this);
        let responseSection = $('#validate_response');

        thisButton.prop('disabled', true);
        responseSection.html('<p class="text-warning">validating...</p>');
        var url = `${endpoint()}/.well-known/openid-configuration`;
        console.log(`GET ${url}`);
        $.ajax({
            url: url,
            method: 'GET',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data, textStatus, jqXHR) {
                console.log(data);
                localStorage.setItem('apiendpoint', $('#apiendpoint').val());
                expectedTokenEndpoint = `${endpoint()}/connect/token`;
                isValid = (data.token_endpoint == expectedTokenEndpoint);
                let formattedResponse = JSON.stringify(data, null, '  ');
                if (isValid) {
                    responseSection.html(`<p class="text-success">Validation Response Successful (<span class="btn-link toggle">toggle</span>)</p><pre>${formattedResponse}`);
                }
                else {
                    responseSection.html(`<p class="text-danger">Validation Response Failed - Token Endpoint Expected was ${expectedTokenEndpoint} (<span class="btn-link toggle">toggle</span>)</p><pre>${formattedResponse}`);
                }
                bindToggle();
                thisButton.prop('disabled', false);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(textStatus + ": " + jqXHR.status + " " + errorThrown);
                console.log(jqXHR);
                responseSection.html(`<p class="text-danger">Validation Response Failed - Bad Request</p>`);
                thisButton.prop('disabled', false);
            }
        });
    });


    /* ===== PUBLISH FUNCTIONS ===== */

    $('#register_publisher').on('click', function () {
        let thisButton = $(this);
        let responseSection = $('#reg_pub_response');

        thisButton.prop('disabled', true);
        responseSection.html('<p class="text-warning">registering...</p>');
        var model = {
            client_name: $('#reg_pub_client_name').val(),
            client_uri: $('#reg_pub_client_uri').val(),
            scope: $('#reg_pub_scope').val(),
        };

        if ($('#reg_pub_add1property').val() != '') {
            model[$('#reg_pub_add1property').val()] = $('#reg_pub_add1value').val()
        }
        if ($('#reg_pub_add2property').val() != '') {
            model[$('#reg_pub_add2property').val()] = $('#reg_pub_add2value').val()
        }
        if ($('#reg_pub_add1property').val() != '') {
            model[$('#reg_pub_add2property').val()] = $('#reg_pub_add2value').val()
        }

        console.log(model);

        var url = `${endpoint()}/connect/register`;
        console.log(`POST ${url}`);
        $.ajax({
            url: url,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            method: 'POST',
            data: JSON.stringify(model),
            success: function (data, textStatus, jqXHR) {
                console.log(data);
                localStorage.setItem('reg_pub_client_id', data.client_id);
                localStorage.setItem('reg_pub_client_secret', data.client_secret);
                let formattedResponse = JSON.stringify(data, null, '  ');
                responseSection.html(`<p class="text-success">Registration Successful (<span class="btn-link toggle">toggle</span>)</p><pre>${formattedResponse}`);
                bindToggle();
                thisButton.prop('disabled', false);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(textStatus + ": " + jqXHR.status + " " + errorThrown);
                console.log(jqXHR);
                responseSection.html(`<p class="text-danger">Registration Failed - Bad Request</p>`);
                thisButton.prop('disabled', false);
            }
        });
    });

    $('#register_wallet').on('click', function () {
        let thisButton = $(this);
        let responseSection = $('#reg_wallet_response');

        thisButton.prop('disabled', true);
        responseSection.html('<p class="text-warning">registering...</p>');
        var model = {
            client_name: $('#reg_wallet_client_name').val(),
            client_uri: $('#reg_wallet_client_uri').val(),
            scope: $('#reg_wallet_scope').val(),
        };

        if ($('#reg_wallet_add1property').val() != '') {
            model[$('#reg_wallet_add1property').val()] = $('#reg_wallet_add1value').val()
        }
        if ($('#reg_wallet_add2property').val() != '') {
            model[$('#reg_wallet_add2property').val()] = $('#reg_wallet_add2value').val()
        }
        if ($('#reg_wallet_add1property').val() != '') {
            model[$('#reg_wallet_add2property').val()] = $('#reg_wallet_add2value').val()
        }

        console.log(model);

        var url = `${endpoint()}/connect/register`;
        console.log(`POST ${url}`);
        $.ajax({
            url: url,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            method: 'POST',
            data: JSON.stringify(model),
            success: function (data, textStatus, jqXHR) {
                console.log(data);
                localStorage.setItem('reg_wallet_client_id', data.client_id);
                localStorage.setItem('reg_wallet_client_secret', data.client_secret);
                let formattedResponse = JSON.stringify(data, null, '  ');
                responseSection.html(`<p class="text-success">Registration Successful (<span class="btn-link toggle">toggle</span>)</p><pre>${formattedResponse}`);
                bindToggle();
                thisButton.prop('disabled', false);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(textStatus + ": " + jqXHR.status + " " + errorThrown);
                console.log(jqXHR);
                responseSection.html(`<p class="text-danger">Registration Failed - Bad Request</p>`);
                thisButton.prop('disabled', false);
            }
        });
    });

    $('#auth_pub_userlastreg').on('click', function () {
        $("#auth_pub_client_id").val(localStorage.getItem('reg_pub_client_id'));
        $("#auth_pub_client_secret").val(localStorage.getItem('reg_pub_client_secret'));
    });

    $('#authenticate_publisher').on('click', function () {
        let thisButton = $(this);
        let responseSection = $('#auth_pub_response');

        thisButton.prop('disabled', true);
        responseSection.html('<p class="text-warning">authenticating...</p>');
        var model = {
            client_id: $('#auth_pub_client_id').val(),
            client_secret: $('#auth_pub_client_secret').val(),
            scope: $('#auth_pub_scope').val(),
            grant_type: $('#auth_pub_grant_type').val(),
        };

        console.log(model);

        var url = `${endpoint()}/connect/token`;
        console.log(`POST ${url}`);
        $.ajax({
            url: url,
            contentType: "application/x-www-form-urlencoded",
            dataType: "json",
            method: 'POST',
            data: model,
            success: function (data, textStatus, jqXHR) {
                console.log(data);
                localStorage.setItem('auth_pub_access_token', data.access_token);
                let formattedResponse = JSON.stringify(data, null, '  ');
                responseSection.html(`<p class="text-success">Authentication Successful (<span class="btn-link toggle">toggle</span>)</p><pre>${formattedResponse}`);
                bindToggle();
                thisButton.prop('disabled', false);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(textStatus + ": " + jqXHR.status + " " + errorThrown);
                console.log(jqXHR);
                responseSection.html(`<p class="text-danger">Authentication Failed - Bad Request</p>`);
                thisButton.prop('disabled', false);
            }
        });
    });

    $('#publish_uselasttoken').on('click', function () {
        $("#publish_token").val(`Bearer ${localStorage.getItem('auth_pub_access_token')}`);
    });

    $('#configure_publish_uselasttoken').on('click', function () {
        $("#configure_publish_token").val(`Bearer ${localStorage.getItem('auth_pub_access_token')}`);
    });

    $('#configure_publisher').on('click', function () {
        let thisButton = $(this);
        let responseSection = $('#configure_pub_response');

        thisButton.prop('disabled', true);
        responseSection.html('<p class="text-warning">configuring...</p>');
        var model = {
            AccessKeyBaseUri: $("#configure_publish_wallet_uri").val(),
            PushUri: $("#configure_publish_push_uri").val()
        };

        //console.log(model);
        var url = `${endpoint()}/api/configuration`;
        console.log(`POST ${url}`);
        $.ajax({
            url: url,
            contentType: "application/json",
            headers: { "Authorization": $('#configure_publish_token').val() },
            //dataType: "json",
            method: 'POST',
            data: JSON.stringify(model),
            success: function (data, textStatus, jqXHR) {
                console.log(data);
                localStorage.setItem('configure_publish_wallet_uri', data.AccessKeyBaseUri);
                localStorage.setItem('configure_publish_push_uri', data.PushUri);
                responseSection.html('<p class="text-success">Configuration Accepted</p>');
                thisButton.prop('disabled', false);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(textStatus + ": " + jqXHR.status + " " + errorThrown);
                console.log(jqXHR);
                responseSection.html(`<p class="text-danger">Configuration Failed - Bad Request</p>`);
                thisButton.prop('disabled', false);
            }
        });
    });

    $('#publish_browsefile').on('click', function () {
        $('#inputfile').trigger('click');
    });

    $('#publish_clear').on('click', function () {
        $('#publish_clr').text("");
    });

    $('#inputfile').on('change', function () {
        var fr = new FileReader();
        fr.onload = function () {
            //console.log(fr.result);
            var data = JSON.parse(fr.result);
            if (!data.identity && !data.clr) {
                console.log("wrapping json to conform");
                data = { identity: { id: "some identifier here" }, clr: data };
            }
            let formattedResponse = JSON.stringify(data, null, '  ');
            $('#publish_clr').val(formattedResponse);
        }

        fr.readAsText(this.files[0]);
        $(this).val("");
    });

    $('#publish').on('click', function () {
        let thisButton = $(this);
        let responseSection = $('#publish_response');

        thisButton.prop('disabled', true);
        responseSection.html('<p class="text-warning">publishing...</p>');
        var model = JSON.parse($('#publish_clr').val());

        //console.log(model);
        var url = `${endpoint()}/api/publish`;
        console.log(`POST ${url}`);
        $.ajax({
            url: url,
            contentType: "application/json",
            headers: { "Authorization": $('#publish_token').val() },
            dataType: "json",
            method: 'POST',
            data: JSON.stringify(model),
            success: function (data, textStatus, jqXHR) {
                console.log(data);
                localStorage.setItem('pub_requestid', data.requestId);

                connectSignalR(endpoint(), data.requestId);

                let formattedResponse = JSON.stringify(data, null, '  ');
                responseSection.html(`<p class="text-success">Publish Accepted.  Subscribed to SignalR channel (<span class="btn-link toggle">toggle</span>)</p><pre>${formattedResponse}`);
                bindToggle();
                thisButton.prop('disabled', false);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(textStatus + ": " + jqXHR.status + " " + errorThrown);
                console.log(jqXHR);
                responseSection.html(`<p class="text-danger">Publish Failed - Bad Request</p>`);
                thisButton.prop('disabled', false);
            }
        });
    });

        $('#publishPush').on('click', function () {
            let thisButton = $(this);
            let responseSection = $('#publish_response');

            thisButton.prop('disabled', true);
            responseSection.html('<p class="text-warning">publishing...</p>');
            var model = JSON.parse($('#publish_clr').val());

            //console.log(model);
            var url = `${endpoint()}/api/publish/thenpush`;
            console.log(`POST ${url}`);
            $.ajax({
                url: url,
                contentType: "application/json",
                headers: { "Authorization": $('#publish_token').val() },
                dataType: "json",
                method: 'POST',
                data: JSON.stringify(model),
                success: function (data, textStatus, jqXHR) {
                    console.log(data);
                    localStorage.setItem('pub_requestid', data.requestId);

                    connectSignalR(endpoint(), data.requestId);

                    let formattedResponse = JSON.stringify(data, null, '  ');
                    responseSection.html(`<p class="text-success">Publish Accepted.  Subscribed to SignalR channel (<span class="btn-link toggle">toggle</span>)</p><pre>${formattedResponse}`);
                    bindToggle();
                    thisButton.prop('disabled', false);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(textStatus + ": " + jqXHR.status + " " + errorThrown);
                    console.log(jqXHR);
                    responseSection.html(`<p class="text-danger">Publish Failed - Bad Request</p>`);
                    thisButton.prop('disabled', false);
                }
            });
        });

    $('#inquire_uselasttoken').on('click', function () {
        $("#inquire_token").val(`Bearer ${localStorage.getItem('auth_pub_access_token')}`);
    });

    $('#inquire_uselastrequestId').on('click', function () {
        $("#inquire_requestid").val(localStorage.getItem('pub_requestid'));
    });

    $('#inquire').on('click', function () {
        let thisButton = $(this);
        let responseSection = $('#inquire_response');

        $("#inquire_url").hide();
        $('#inquire_qrcode').hide();

        thisButton.prop('disabled', true);
        responseSection.html('<p class="text-warning">Retrieving status...</p>');

        var url = `${endpoint()}/api/requests/${$('#inquire_requestid').val()}`;
        console.log(`GET ${url}`);
        $.ajax({
            url: url,
            contentType: "application/json",
            headers: { "Authorization": $('#inquire_token').val() },
            dataType: "json",
            method: 'GET',
            success: function (data, textStatus, jqXHR) {
                console.log(data);
                localStorage.setItem('publish_accesskey', data.accessKey);
                let formattedResponse = JSON.stringify(data, null, '  ');
                responseSection.html(`<p class="text-success">Status Inquiry Succeeded (<span class="btn-link toggle">toggle</span>)</p><pre>${formattedResponse}`);

                bindToggle();
                if (data.url) {
                    $("#inquire_url").attr("href", data.url);
                    $("#inquire_url").show();
                }
                if (data.qrCode) {
                    $('#inquire_qrcode').attr('src', `data:image/png;base64, ${data.qrCode.data}`);
                    $('#inquire_qrcode').show();

                }
                thisButton.prop('disabled', false);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(textStatus + ": " + jqXHR.status + " " + errorThrown);
                console.log(jqXHR);
                responseSection.html(`<p class="text-danger">Status Inquiry Failed - Bad Request</p>`);
                thisButton.prop('disabled', false);
            }
        });
    });

    function inquire(token, requestId) {
        let responseSection = $('#inquire_response');

        $("#inquire_url").hide();
        $('#inquire_qrcode').hide();

        responseSection.html('<p class="text-warning">Retrieving status...</p>');

        var url = `${endpoint()}/api/requests/${requestId}`;
        console.log(`GET ${url}`);
        $.ajax({
            url: url,
            contentType: "application/json",
            headers: { "Authorization": token },
            dataType: "json",
            method: 'GET',
            success: function (data, textStatus, jqXHR) {
                console.log(data);
                localStorage.setItem('publish_accesskey', data.accessKey);
                let formattedResponse = JSON.stringify(data, null, '  ');
                responseSection.html(`<p class="text-success">Status Inquiry Succeeded (<span class="btn-link toggle">toggle</span>)</p><pre>${formattedResponse}`);

                bindToggle();
                if (data.url) {
                    $("#inquire_url").attr("href", data.url);
                    $("#inquire_url").show();
                }
                if (data.qrCode) {
                    $('#inquire_qrcode').attr('src', `data:image/png;base64, ${data.qrCode.data}`);
                    $('#inquire_qrcode').show();

                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(textStatus + ": " + jqXHR.status + " " + errorThrown);
                console.log(jqXHR);
                responseSection.html(`<p class="text-danger">Status Inquiry Failed - Bad Request</p>`);
                thisButton.prop('disabled', false);
            }
        });
    }


    /* ===== WALLET FUNCTIONS ===== */

    $('#auth_wallet_userlastreg').on('click', function () {
        $("#auth_wallet_client_id").val(localStorage.getItem('reg_wallet_client_id'));
        $("#auth_wallet_client_secret").val(localStorage.getItem('reg_wallet_client_secret'));
    });

    $('#authenticate_wallet').on('click', function () {
        let thisButton = $(this);
        let responseSection = $('#auth_wallet_response');

        thisButton.prop('disabled', true);
        responseSection.html('<p class="text-warning">authenticating...</p>');
        var model = {
            client_id: $('#auth_wallet_client_id').val(),
            client_secret: $('#auth_wallet_client_secret').val(),
            scope: $('#auth_wallet_scope').val(),
            grant_type: $('#auth_wallet_grant_type').val(),
        };

        console.log(model);

        var url = `${endpoint()}/connect/token`;
        console.log(`POST ${url}`);
        $.ajax({
            url: url,
            contentType: "application/x-www-form-urlencoded",
            dataType: "json",
            method: 'POST',
            data: model,
            success: function (data, textStatus, jqXHR) {
                console.log(data);
                localStorage.setItem('auth_wallet_access_token', data.access_token);
                let formattedResponse = JSON.stringify(data, null, '  ');
                responseSection.html(`<p class="text-success">Authentication Successful (<span class="btn-link toggle">toggle</span>)</p><pre>${formattedResponse}`);
                bindToggle();
                thisButton.prop('disabled', false);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(textStatus + ": " + jqXHR.status + " " + errorThrown);
                console.log(jqXHR);
                responseSection.html(`<p class="text-danger">Authentication Failed - Bad Request</p>`);
                thisButton.prop('disabled', false);
            }
        });
    });

    $('#vc_wallet_uselasttoken').on('click', function () {
        $("#vc_wallet_token").val(`Bearer ${localStorage.getItem('auth_wallet_access_token')}`);
    });

    $('#vc_wallet_uselastaccesskey').on('click', function () {
        $("#vc_wallet_accesskey").val(localStorage.getItem('publish_accesskey'));
    });

    $('#vc_wallet').on('click', function () {
        let thisButton = $(this);
        let responseSection = $('#vc_wallet_response');

        thisButton.prop('disabled', true);
        responseSection.html('<p class="text-warning">Retrieving VC...</p>');
        var model = { accessKey: $('#vc_wallet_accesskey').val() };

        //console.log(model);
        var url = `${endpoint()}/api/credentials`;
        console.log(`POST ${url}`);
        $.ajax({
            url: url,
            contentType: "application/json",
            headers: { "Authorization": $('#vc_wallet_token').val() },
            dataType: "json",
            method: 'POST',
            data: JSON.stringify(model),
            success: function (data, textStatus, jqXHR) {
                console.log(data);

                let formattedResponse = JSON.stringify(data, null, '  ');
                responseSection.html(`<p class="text-success">VC Received.  (<span class="btn-link toggle">toggle</span>)</p><pre>${formattedResponse}`);
                bindToggle();
                thisButton.prop('disabled', false);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(textStatus + ": " + jqXHR.status + " " + errorThrown);
                console.log(jqXHR);
                responseSection.html(`<p class="text-danger">VC Failed - Bad Request</p>`);
                thisButton.prop('disabled', false);
            }
        });
    });


    /* ===== REVOKE FUNCTIONS ===== */

    $('#revoke_uselasttoken').on('click', function () {
        $("#revoke_token").val(`Bearer ${localStorage.getItem('auth_pub_access_token')}`);
    });

    $('#revoke_uselastrequestId').on('click', function () {
        $("#revoke_requestid").val(localStorage.getItem('pub_requestid'));
    });

    $('#revoke').on('click', function () {
        let thisButton = $(this);
        let responseSection = $('#revoke_response');

        thisButton.prop('disabled', true);
        responseSection.html('<p class="text-warning">Revoking...</p>');

        var url = `${endpoint()}/api/requests/${$('#revoke_requestid').val()}`;
        console.log(`DELETE ${url}`);
        $.ajax({
            url: url,
            contentType: "application/json",
            headers: { "Authorization": $('#revoke_token').val() },
            dataType: "json",
            method: 'DELETE',
            success: function (data, textStatus, jqXHR) {
                console.log(data);
                let formattedResponse = JSON.stringify(data, null, '  ');
                responseSection.html(`<p class="text-success">Revocation Successful (<span class="btn-link toggle">toggle</span>)</p><pre>${formattedResponse}`);
                bindToggle();
                thisButton.prop('disabled', false);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(textStatus + ": " + jqXHR.status + " " + errorThrown);
                console.log(jqXHR);
                responseSection.html(`<p class="text-danger">Revocation Failed - Bad Request</p>`);
                thisButton.prop('disabled', false);
            }
        });
    });


</script>
}